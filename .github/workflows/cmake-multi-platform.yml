# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      VCPKG_ROOT: $RUNNER_TEMP/vcpkg
      
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows → VS2022
          - os: windows-latest
            preset: vs2022

          # Linux → Ninja
          - os: ubuntu-latest
            preset: ninja-debug
          - os: ubuntu-latest
            preset: ninja-release

          # Linux → WebAssembly via Emscripten
          - os: ubuntu-latest
            preset: wasm32-debug
          - os: ubuntu-latest
            preset: wasm32-release

    steps:
      - uses: actions/checkout@v4

      # ─── LINUX / macOS ────────────────────────────────────────────────────────
      - name: Bootstrap vcpkg (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          git clone https://github.com/microsoft/vcpkg.git "$RUNNER_TEMP/vcpkg"
          "$RUNNER_TEMP/vcpkg/bootstrap-vcpkg.sh"
          echo "VCPKG_ROOT=$RUNNER_TEMP/vcpkg" >> $GITHUB_ENV
          echo "$RUNNER_TEMP/vcpkg" >> $GITHUB_PATH

      # ─── WINDOWS ──────────────────────────────────────────────────────────────
      - name: Bootstrap vcpkg (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $dest = Join-Path $Env:RUNNER_TEMP 'vcpkg'
          git clone https://github.com/microsoft/vcpkg.git $dest
          & "$dest\bootstrap-vcpkg.bat"
          # persist to future steps:
          "`nVCPKG_ROOT=$dest" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          $dest | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append

      - name: Configure via CMake preset
        run: cmake --preset vs2022

      - name: Build via CMake preset
        run: cmake --build --preset vs2022 --config ${{ matrix.build_type }}

      #- name: Test via CMake preset
      #  run: cmake --test --preset vs2022 --config ${{ matrix.build_type }}
